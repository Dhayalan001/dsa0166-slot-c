#include <iostream>

class Employee {
public:
    
    virtual double calculatePay() const = 0; // Pure virtual function
    
    virtual ~Employee() {}
};

class Manager : public Employee {
private:
    double salary;
    double bonus;

public:
    Manager(double s, double b) : salary(s), bonus(b) {}

    double calculatePay() const override {
        return salary + bonus;
    }
};

class Engineer : public Employee {
private:
    double hourlyRate;
    int hoursWorked;

public:
    Engineer(double rate, int hours) : hourlyRate(rate), hoursWorked(hours) {}

    double calculatePay() const override {
        return hourlyRate * hoursWorked;
    }
};

int main() {
    Manager manager(5000, 1000); 
    Engineer engineer(50, 160);  

    Employee* employee1 = &manager;
    Employee* employee2 = &engineer;

    std::cout << "Manager's pay: $" << employee1->calculatePay() << std::endl;
    std::cout << "Engineer's pay: $" << employee2->calculatePay() << std::endl;

    return 0;
}
out put:
Manager's pay: $6000
Engineer's pay: $8000

